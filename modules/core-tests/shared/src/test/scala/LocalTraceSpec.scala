// Copyright (c) 2019-2020 by Rob Norris and Contributors
// This software is licensed under the MIT License (MIT).
// For more information see LICENSE or https://opensource.org/licenses/MIT

package natchez
package mtl

import cats.effect.{MonadCancelThrow, Trace => _}
import cats.mtl._

class LocalTraceSpec extends InMemorySuite.LocalSuite {

  private def useTrace[F[_]: Trace]: F[Unit] = Trace[F].log("hello world")

  localTest(
    "Trace[F] should use root span generated by provided EntryPoint[F] via Local[F, Span[F]]",
    new LocalTest {
      override def program[F[_]: MonadCancelThrow](entryPoint: EntryPoint[F])(implicit
          L: Local[F, Span[F]]
      ): F[Unit] =
        entryPoint
          .root("my root")
          .use(Local[F, Span[F]].scope(useTrace[F]))

      override def expectedHistory: List[(Lineage, NatchezCommand)] = List(
        Lineage.Root -> NatchezCommand
          .CreateRootSpan("my root", Kernel(Map()), Span.Options.Defaults),
        Lineage.Root("my root") -> NatchezCommand.LogEvent("hello world"),
        Lineage.Root -> NatchezCommand.ReleaseRootSpan("my root")
      )
    }
  )
}
